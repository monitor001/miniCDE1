services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: minicde_postgres_dev
    environment:
      POSTGRES_DB: minicde_dev
      POSTGRES_USER: minicde_user
      POSTGRES_PASSWORD: minicde_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - minicde_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U minicde_user -d minicde_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    container_name: minicde_backend_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://minicde_user:minicde_password@postgres:5432/minicde_dev
      JWT_SECRET: dev_jwt_secret_key_2024
      PORT: 3001
      SOCKET_URL: http://localhost:3001
      REDIS_URL: redis://redis:6379
      # Project card features
      ENABLE_PROJECT_STATS: true
      ENABLE_PROJECT_EXPORT: true
      ENABLE_PROJECT_SHARING: true
      MAX_FILE_SIZE: 104857600
      ALLOWED_FILE_TYPES: pdf,dwg,rvt,ifc,docx,xlsx,jpg,png
      REQUEST_TIMEOUT: 30000
      RESPONSE_TIMEOUT: 30000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
      AUTH_RATE_LIMIT_MAX: 50
      UPLOAD_PATH: /app/uploads
      # CORS Configuration
      CORS_ORIGIN: http://localhost:3000,http://127.0.0.1:3000,http://localhost:3001,http://127.0.0.1:3001
      # Debug mode
      DEBUG_MODE: true
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - backend_dev_logs:/app/logs
      - /app/node_modules
    ports:
      - "3002:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - minicde_dev_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        NODE_ENV: development
    container_name: minicde_frontend_dev
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_SOCKET_URL: http://localhost:3001
      REACT_APP_ENABLE_PROJECT_CARDS: true
      REACT_APP_ENABLE_EXPORT: true
      REACT_APP_ENABLE_SHARING: true
      REACT_APP_TITLE: MiniCDE - Development
      # Development flags
      GENERATE_SOURCEMAP: true
      INLINE_RUNTIME_CHUNK: true
      SKIP_PREFLIGHT_CHECK: true
      CHOKIDAR_USEPOLLING: true
      FAST_REFRESH: true
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - minicde_dev_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: minicde_redis_dev
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - minicde_dev_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_dev_logs:
    driver: local

networks:
  minicde_dev_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 